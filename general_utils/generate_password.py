# general_utils/generate_password.py
import random
import string
import secrets
from passlib.pwd import genword


def generate_password(min_length=12, max_length=20):
    """
    Generate secure passwords using both the secrets module and passlib.

    :param min_length: Minimum length of the password
    :param max_length: Maximum length of the password
    :return: Dictionary containing passwords generated by both methods
    """
    # Ensure min_length is at least 12
    min_length = max(12, min_length)

    # Generate a random length between min_length and max_length
    length = random.randint(min_length, max_length)

    # Using secrets module to generate the password
    characters = string.ascii_letters + string.digits + string.punctuation
    secrets_password = ''.join(secrets.choice(characters) for _ in range(length))

    # Using passlib to generate the password
    passlib_password = genword(length=length, charset="ascii_72")

    return {
        'secrets_password': secrets_password,
        'passlib_password': passlib_password
    }


# Example usage:
if __name__ == "__main__":
    passwords = generate_password(min_length=12, max_length=20)
    print("Password using secrets:", passwords['secrets_password'])
    print("Password using passlib:", passwords['passlib_password'])
